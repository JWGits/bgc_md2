{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "rocky-fishing",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>.container { width:100% !important; }</style>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import HTML\n",
    "from bgc_md2.resolve.mvars import CompartmentalMatrix, StateVariableTuple, VegetationCarbonInputPartitioningTuple,VegetationCarbonInputTuple\n",
    "from bgc_md2.resolve.MVarSet import MVarSet\n",
    "display(HTML(\"<style>.container { width:100% !important; }</style>\"))\n",
    "mvs_mm =  MVarSet.from_model_name('TECOmm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "british-specialist",
   "metadata": {},
   "outputs": [],
   "source": [
    "node_names=[str(sv) for sv in mvs_mm.get_StateVariableTuple()]\n",
    "in_fluxes, internal_fluxes, out_fluxes = mvs_mm.get_InFluxesBySymbol(),mvs_mm.get_InternalFluxesBySymbol(),mvs_mm.get_OutFluxesBySymbol()\n",
    "\n",
    "in_flux_targets, out_flux_sources = [[str(k) for k in d.keys()] for d in (in_fluxes, out_fluxes)] \n",
    "\n",
    "internal_connections = [(str(s),str(t)) for s,t in internal_fluxes.keys()]   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "industrial-wilderness",
   "metadata": {},
   "outputs": [],
   "source": [
    "import CompartmentalSystems.helpers_reservoir as hr\n",
    "G, GVI, GINT, GVO = hr.nxgraphs(mvs_mm.get_StateVariableTuple(),in_fluxes,internal_fluxes,out_fluxes)\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "sunrise-oregon",
   "metadata": {},
   "outputs": [],
   "source": [
    "virtual_in_flux_sources=[n for n in GVI.nodes if GVI.in_degree(n)==0]\n",
    "virtual_out_flux_targets=[n for n in GVO.nodes if GVO.out_degree(n)==0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "prescription-banner",
   "metadata": {},
   "outputs": [],
   "source": [
    "import networkx as nx\n",
    "#pos=nx.spiral_layout(G)\n",
    "#pos=nx.circular_layout(G)\n",
    "#pos=nx.kamada_kawai_layout(G)\n",
    "#pos=nx.planar_layout(G)\n",
    "#pos=nx.shell_layout(G)\n",
    "#pos=nx.spectral_layout(G)\n",
    "#pos=nx.spring_layout(G)\n",
    "#pos=nx.spring_layout(G,k=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "described-shooting",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.patches.FancyArrowPatch at 0x7f2060fc0850>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fcb490>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa4af0>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa4d30>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa4f70>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa4fd0>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2430>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2670>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa28b0>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2af0>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2d30>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2f70>,\n",
       " <matplotlib.patches.FancyArrowPatch at 0x7f2060fa2fd0>]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "virtual_node_options={\n",
    "    'node_size': 10,\n",
    "}\n",
    "real_node_options={\n",
    "    'node_color': 'black',\n",
    "    'node_size': 100,\n",
    "}\n",
    "labels={n:n for n in node_names }\n",
    "ax=plt.axes()\n",
    "nx.draw_networkx_nodes(ax=ax,pos=pos,G=G,nodelist=virtual_in_flux_sources,**virtual_node_options,node_color='blue')\n",
    "nx.draw_networkx_nodes(ax=ax,pos=pos,G=G,nodelist=[n for n in node_names],**real_node_options)\n",
    "nx.draw_networkx_labels(ax=ax,pos=pos,G=G,labels=labels)\n",
    "nx.draw_networkx_edges(ax=ax,pos=pos,G=G,edgelist=[e for e in G.edges if e in GVI.edges] ,edge_color='blue')\n",
    "nx.draw_networkx_edges(ax=ax,pos=pos,G=G,edgelist=[e for e in G.edges if e in GVO.edges] ,edge_color='red')\n",
    "nx.draw_networkx_edges(ax=ax,pos=pos,G=G,edgelist=[e for e in G.edges if e in GINT.edges] ,edge_color='black')\n",
    "\n",
    "#nx.draw_networkx_edges(ax=ax,pos=pos,G=G)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "middle-arcade",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "wanted-ultimate",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "offensive-peninsula",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "behavioral-ending",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
